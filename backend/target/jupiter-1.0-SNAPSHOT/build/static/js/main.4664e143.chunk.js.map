{"version":3,"sources":["utils.js","components/Login.js","components/Register.js","components/Favorites.js","components/CustomSearch.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["SERVER_ORIGIN","loginUrl","login","credential","fetch","method","headers","credentials","body","JSON","stringify","then","response","status","Error","json","registerUrl","register","data","logoutUrl","logout","topGamesUrl","getTopGames","getGameDetailsUrl","searchGameByIdUrl","searchGameById","gameId","searchGameByName","gameName","getGameDetails","id","favoriteItemUrl","getFavoriteItem","getRecommendedItemsUrl","getRecommendations","Login","state","displayModal","handleCancel","setState","signinOnClick","onFinish","message","success","name","props","onSuccess","catch","err","error","render","shape","onClick","style","marginRight","title","visible","onCancel","footer","destroyOnClose","preserve","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","type","htmlType","React","Component","Register","signupOnClick","initialValues","remember","SubMenu","Menu","MenuKey","Favorites","displayDrawer","onDrawerClose","onFavoriteClick","VIDEO","STREAM","CLIP","icon","StarFilled","placement","width","onClose","mode","defaultOpenKeys","height","borderRight","selectable","EyeOutlined","map","item","href","url","target","rel","broadcaster_name","YoutubeOutlined","VideoCameraOutlined","CustomSearch","searchOnClick","onSubmit","game_name","SearchOutlined","marginLeft","marginTop","TabPane","Tabs","tabKeys","renderCardTitle","loggedIn","favs","favOnChange","isFav","find","fav","StarOutlined","favItem","favorite","addFavoriteItem","overflow","textOverflow","renderCardGrid","grid","xs","sm","md","lg","xl","dataSource","renderItem","alt","src","thumbnail_url","replace","Home","resources","favoriteItems","favoriteOnChange","favVideos","favStreams","favClips","defaultActiveKey","tab","forceRender","Header","Layout","Content","Sider","App","topGames","onGameSelect","key","customSearchOnSuccess","signinOnSuccess","signoutOnClick","componentDidMount","justify","className","onSelect","LikeOutlined","FireOutlined","game","box_art_url","borderRadius","padding","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4664e143.chunk.js","sourcesContent":["const SERVER_ORIGIN = '';\n \nconst loginUrl = `${SERVER_ORIGIN}/login`;\n\nexport const login = (credential) => {\n  return fetch(loginUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    credentials: 'include',\n    body: JSON.stringify(credential)\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to log in');\n    }\n \n    return response.json();\n  })\n}\n \nconst registerUrl = `${SERVER_ORIGIN}/register`;\n \nexport const register = (data) => {\n  return fetch(registerUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data)\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to register');\n    }\n  })\n}\n \nconst logoutUrl = `${SERVER_ORIGIN}/logout`;\n \nexport const logout = () => {\n  return fetch(logoutUrl, {\n    method: 'POST',\n    credentials: 'include',\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to log out');\n    }\n  })\n}\n \nconst topGamesUrl = `${SERVER_ORIGIN}/game`;\n \nexport const getTopGames = () => {\n  return fetch(topGamesUrl).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to get top games');\n    }\n \n    return response.json();\n  })\n}\n \nconst getGameDetailsUrl = `${SERVER_ORIGIN}/game?game_name=`;\n \nconst getGameDetails = (gameName) => {\n  return fetch(`${getGameDetailsUrl}${gameName}`).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to find the game');\n    }\n \n    return response.json();\n  });\n}\n \nconst searchGameByIdUrl = `${SERVER_ORIGIN}/search?game_id=`;\n \nexport const searchGameById = (gameId) => {\n  return fetch(`${searchGameByIdUrl}${gameId}`).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to find the game');\n    }\n    return response.json();\n  })\n}\n \nexport const searchGameByName = (gameName) => {\n  return getGameDetails(gameName).then((data) => {\n    if (data && data.id) {\n      return searchGameById(data.id);\n    }\n \n    throw Error('Fail to find the game')\n  })\n}\n \nconst favoriteItemUrl = `${SERVER_ORIGIN}/favorite`;\n \nexport const addFavoriteItem = (favItem) => {\n  return fetch(favoriteItemUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    credentials: 'include',\n    body: JSON.stringify({ favorite: favItem })\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to add favorite item');\n    }\n  })\n}\n \nexport const deleteFavoriteItem = (favItem) => {\n  return fetch(favoriteItemUrl, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    credentials: 'include',\n    body: JSON.stringify({ favorite: favItem })\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to delete favorite item');\n    }\n  })\n}\n \nexport const getFavoriteItem = () => {\n  return fetch(favoriteItemUrl, {\n    credentials: 'include',\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to get favorite item');\n    }\n \n    return response.json();\n  })\n}\n \nconst getRecommendedItemsUrl = `${SERVER_ORIGIN}/recommendation`;\n \nexport const getRecommendations = () => {\n  return fetch(getRecommendedItemsUrl, {\n    credentials: 'include',\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error('Fail to get recommended item');\n    }\n \n    return response.json();\n  })\n}\n\n\n","import {Button, Form, Input, message, Modal} from 'antd';\nimport React from 'react';\nimport {LockOutlined, UserOutlined} from '@ant-design/icons';\nimport {login} from '../utils';\n\nclass Login extends React.Component {\n    state = {\n        displayModal: false\n    }\n\n    handleCancel = () => {\n        this.setState({\n            displayModal: false,\n        })\n    }\n\n    signinOnClick = () => {\n        this.setState({\n            displayModal: true,\n        })\n    }\n\n    onFinish = (data) => {\n        login(data)\n            .then((data) => {\n                this.setState({\n                    displayModal: false,\n                })\n                message.success(`Welcome back, ${data.name}`);\n                this.props.onSuccess();\n            }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n\n    render = () => {\n        return (\n            <>\n                <Button shape=\"round\" onClick={this.signinOnClick} style={{marginRight: '20px'}}>\n                    Login</Button>\n                <Modal\n                    title=\"Log in\"\n                    visible={this.state.displayModal}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                    destroyOnClose={true}\n                >\n                    <Form\n                        name=\"normal_login\"\n                        onFinish={this.onFinish}\n                        preserve={false}\n                    >\n                        <Form.Item\n                            name=\"user_id\"\n                            rules={[{required: true, message: 'Please input your Username!'}]}\n                        >\n                            <Input prefix={<UserOutlined/>} placeholder=\"Username\"/>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            rules={[{required: true, message: 'Please input your Password!'}]}\n                        >\n                            <Input\n                                prefix={<LockOutlined/>}\n                                placeholder=\"Password\"\n                            />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Login</Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default Login;\n","import {Button, Form, Input, message, Modal} from 'antd';\nimport React from 'react';\nimport {LockOutlined, UserOutlined} from '@ant-design/icons';\nimport {register} from '../utils';\n\nclass Register extends React.Component {\n    state = {\n        displayModal: false\n    }\n\n    handleCancel = () => {\n        this.setState({\n            displayModal: false,\n        })\n    }\n\n    signupOnClick = () => {\n        this.setState({\n            displayModal: true,\n        })\n    }\n\n    onFinish = (data) => {\n        register(data)\n            .then(() => {\n                this.setState({\n                    displayModal: false,\n                })\n                message.success(`Successfully signed up`);\n            }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n\n    render = () => {\n        return (\n            <>\n                <Button shape=\"round\" type=\"primary\" onClick={this.signupOnClick}>\n                    Register</Button>\n                <Modal\n                    title=\"Register\"\n                    visible={this.state.displayModal}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                    destroyOnClose={true}\n                >\n                    <Form\n                        name=\"normal_register\"\n                        initialValues={{remember: true}}\n                        onFinish={this.onFinish}\n                        preserve={false}\n                    >\n                        <Form.Item\n                            name=\"user_id\"\n                            rules={[{required: true, message: 'Please input your Username!'}]}\n                        >\n                            <Input prefix={<UserOutlined/>} placeholder=\"Username\"/>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            rules={[{required: true, message: 'Please input your Password!'}]}\n                        >\n                            <Input\n                                prefix={<LockOutlined/>}\n                                placeholder=\"Password\"\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"first_name\"\n                            rules={[{required: true, message: 'Please input your Firstname!'}]}\n                        >\n                            <Input\n                                placeholder=\"firstname\"\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"last_name\"\n                            rules={[{required: true, message: 'Please input your Lastname!'}]}\n                        >\n                            <Input\n                                placeholder=\"lastname\"\n                            />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Register</Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default Register;","import React from 'react';\nimport {Button, Drawer, Menu} from 'antd';\nimport {EyeOutlined, StarFilled, VideoCameraOutlined, YoutubeOutlined} from '@ant-design/icons';\n\nconst {SubMenu} = Menu;\nconst MenuKey = {\n    Streams: 'streams',\n    Videos: 'videos',\n    Clips: 'clips'\n}\n\nclass Favorites extends React.Component {\n    state = {\n        displayDrawer: false,\n    }\n\n    onDrawerClose = () => {\n        this.setState({\n            displayDrawer: false,\n        })\n    }\n\n    onFavoriteClick = () => {\n        this.setState({\n            displayDrawer: true,\n        })\n    }\n\n    render = () => {\n        const {VIDEO, STREAM, CLIP} = this.props.data;\n\n        return (\n            <>\n                <Button type=\"primary\" shape=\"round\" onClick={this.onFavoriteClick} icon={<StarFilled/>}>\n                    My Favorites</Button>\n                <Drawer\n                    title=\"My Favorites\"\n                    placement=\"right\"\n                    width={720}\n                    visible={this.state.displayDrawer}\n                    onClose={this.onDrawerClose}\n                >\n                    <Menu\n                        mode=\"inline\"\n                        defaultOpenKeys={[MenuKey.Streams]}\n                        style={{height: '100%', borderRight: 0}}\n                        selectable={false}\n                    >\n                        <SubMenu key={MenuKey.Streams} icon={<EyeOutlined/>} title=\"Streams\">\n                            {\n                                STREAM.map((item) => {\n                                    return (\n                                        <Menu.Item key={item.id}>\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                {`${item.broadcaster_name} - ${item.title}`}\n                                            </a>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                        <SubMenu key={MenuKey.Videos} icon={<YoutubeOutlined/>} title=\"Videos\">\n                            {\n                                VIDEO.map((item) => {\n                                    return (\n                                        <Menu.Item key={item.id}>\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                {`${item.broadcaster_name} - ${item.title}`}\n                                            </a>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                        <SubMenu key={MenuKey.Clips} icon={<VideoCameraOutlined/>} title=\"Clips\">\n                            {\n                                CLIP.map((item) => {\n                                    return (\n                                        <Menu.Item key={item.id}>\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                {`${item.broadcaster_name} - ${item.title}`}\n                                            </a>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                    </Menu>\n                </Drawer>\n            </>\n        )\n    }\n}\n\nexport default Favorites;","import React from 'react';\nimport {Button, Form, Input, message, Modal} from 'antd';\nimport {SearchOutlined} from '@ant-design/icons';\nimport {searchGameByName} from '../utils'\n\nclass CustomSearch extends React.Component {\n    state = {\n        displayModal: false\n    }\n\n    handleCancel = () => {\n        this.setState({\n            displayModal: false,\n        })\n    }\n\n    searchOnClick = () => {\n        this.setState({\n            displayModal: true,\n        })\n    }\n\n    onSubmit = (data) => {\n        searchGameByName(data.game_name)\n            .then((data) => {\n                this.setState({\n                    displayModal: false,\n                })\n                this.props.onSuccess(data);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n    }\n\n    render = () => {\n        return (\n            <>\n                <Button shape=\"round\" onClick={this.searchOnClick} icon={<SearchOutlined/>}\n                        style={{marginLeft: '20px', marginTop: '20px'}}>\n                    Custom Search </Button>\n                <Modal\n                    title=\"Search\"\n                    visible={this.state.displayModal}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                >\n                    <Form\n                        name=\"custom_search\"\n                        onFinish={this.onSubmit}\n                    >\n                        <Form.Item\n                            name=\"game_name\"\n                            rules={[{required: true, message: 'Please enter a game name'}]}\n                        >\n                            <Input placeholder=\"Game name\"/>\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Search</Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default CustomSearch;","import React from 'react';\nimport {Button, Card, List, message, Tabs, Tooltip} from 'antd';\nimport {StarFilled, StarOutlined} from '@ant-design/icons';\nimport {addFavoriteItem, deleteFavoriteItem} from '../utils';\n\nconst {TabPane} = Tabs;\nconst tabKeys = {\n    Streams: 'stream',\n    Videos: 'videos',\n    Clips: 'clips',\n}\n\nconst processUrl = (url) => url\n    .replace('%{height}', '252')\n    .replace('%{width}', '480')\n    .replace('{height}', '252')\n    .replace('{width}', '480');\n\nconst renderCardTitle = (item, loggedIn, favs, favOnChange) => {\n    const title = `${item.broadcaster_name} - ${item.title}`;\n\n    const isFav = favs.find((fav) => fav.id === item.id);\n\n    const favOnClick = () => {\n        if (isFav) {\n            deleteFavoriteItem(item).then(() => {\n                favOnChange();\n            }).catch(err => {\n                message.error(err.message)\n            })\n\n            return;\n        }\n\n        addFavoriteItem(item).then(() => {\n            favOnChange();\n        }).catch(err => {\n            message.error(err.message)\n        })\n    }\n\n    return (\n        <>\n            {\n                loggedIn &&\n                <Tooltip title={isFav ? \"Remove from favorite list\" : \"Add to favorite list\"}>\n                    <Button shape=\"circle\" icon={isFav ? <StarFilled/> : <StarOutlined/>} onClick={favOnClick}/>\n                </Tooltip>\n            }\n            <div style={{overflow: 'hidden', textOverflow: 'ellipsis', width: 450}}>\n                <Tooltip title={title}>\n                    <span>{title}</span>\n                </Tooltip>\n            </div>\n        </>\n    )\n}\n\nconst renderCardGrid = (data, loggedIn, favs, favOnChange) => {\n    return (\n        <List\n            grid={{\n                xs: 1,\n                sm: 2,\n                md: 4,\n                lg: 4,\n                xl: 6,\n            }}\n            dataSource={data}\n            renderItem={item => (\n                <List.Item style={{marginRight: '20px'}}>\n                    <Card\n                        title={renderCardTitle(item, loggedIn, favs, favOnChange)}\n                    >\n                        <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <img\n                                alt=\"Placeholder\"\n                                src={processUrl(item.thumbnail_url)}\n                            />\n                        </a>\n                    </Card>\n                </List.Item>\n            )}\n        />\n    )\n}\n\nconst Home = ({resources, loggedIn, favoriteItems, favoriteOnChange}) => {\n    const {VIDEO, STREAM, CLIP} = resources;\n    const {VIDEO: favVideos, STREAM: favStreams, CLIP: favClips} = favoriteItems;\n\n    return (\n        <Tabs\n            defaultActiveKey={tabKeys.Streams}\n        >\n            <TabPane tab=\"Streams\" key={tabKeys.Streams} style={{height: '680px', overflow: 'auto'}} forceRender={true}>\n                {renderCardGrid(STREAM, loggedIn, favStreams, favoriteOnChange)}\n            </TabPane>\n            <TabPane tab=\"Videos\" key={tabKeys.Videos} style={{height: '680px', overflow: 'auto'}} forceRender={true}>\n                {renderCardGrid(VIDEO, loggedIn, favVideos, favoriteOnChange)}\n            </TabPane>\n            <TabPane tab=\"Clips\" key={tabKeys.Clips} style={{height: '680px', overflow: 'auto'}} forceRender={true}>\n                {renderCardGrid(CLIP, loggedIn, favClips, favoriteOnChange)}\n            </TabPane>\n        </Tabs>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport {Button, Col, Layout, Menu, message, Row} from 'antd';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport {getFavoriteItem, getRecommendations, getTopGames, logout, searchGameById} from './utils';\nimport Favorites from './components/Favorites';\nimport {FireOutlined, LikeOutlined} from '@ant-design/icons';\nimport CustomSearch from './components/CustomSearch';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport Home from './components/Home';\n\nconst {Header, Content, Sider} = Layout;\n\nclass App extends React.Component {\n    state = {\n        loggedIn: false,\n        topGames: [],\n        resources: {\n            VIDEO: [],\n            STREAM: [],\n            CLIP: [],\n        },\n        favoriteItems: {\n            VIDEO: [],\n            STREAM: [],\n            CLIP: [],\n        },\n    }\n\n    favoriteOnChange = () => {\n        getFavoriteItem().then((data) => {\n            this.setState({\n                favoriteItems: data,\n                loggedIn: true\n            })\n        }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n\n    onGameSelect = ({key}) => {\n        if (key === 'Recommendation') {\n            getRecommendations().then((data) => {\n                this.setState({\n                    resources: data,\n                })\n            })\n\n            return;\n        }\n\n        searchGameById(key).then((data) => {\n            this.setState({\n                resources: data,\n            })\n        })\n    }\n\n    customSearchOnSuccess = (data) => {\n        this.setState({\n            resources: data,\n        })\n    }\n\n    signinOnSuccess = () => {\n        getFavoriteItem().then((data) => {\n            this.setState({\n                favoriteItems: data,\n                loggedIn: true\n            })\n        }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n\n    signoutOnClick = () => {\n        logout()\n            .then(() => {\n                this.setState({\n                    loggedIn: false\n                })\n                message.success(`Successfull signed out`);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n    }\n\n    componentDidMount = () => {\n        getTopGames()\n            .then((data) => {\n                this.setState({\n                    topGames: data\n                })\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n    }\n\n    render = () => (\n        <Layout>\n            <Header>\n                <Row justify=\"space-between\">\n                    <Col>\n                        {\n                            this.state.loggedIn &&\n                            <Favorites data={this.state.favoriteItems}/>\n                        }\n                    </Col>\n                    <Col>\n                        {\n                            this.state.loggedIn ?\n                                <Button shape=\"round\" onClick={this.signoutOnClick}>\n                                    Logout</Button> :\n                                (\n                                    <>\n                                        <Login onSuccess={this.signinOnSuccess}/>\n                                        <Register/>\n                                    </>\n                                )\n                        }\n                    </Col>\n                </Row>\n            </Header>\n            <Layout>\n                <Sider width={300} className=\"site-layout-background\">\n                    <CustomSearch onSuccess={this.customSearchOnSuccess}/>\n                    <Menu\n                        mode=\"inline\"\n                        onSelect={this.onGameSelect}\n                        style={{marginTop: '10px'}}\n                    >\n                        <Menu.Item icon={<LikeOutlined/>} key=\"Recommendation\">\n                            Recommend for you!</Menu.Item>\n                        <SubMenu icon={<FireOutlined/>} key=\"Popular Games\" title=\"Popular Games\"\n                                 className=\"site-top-game-list\">\n                            {\n                                this.state.topGames.map((game) => {\n                                    return (\n                                        <Menu.Item key={game.id} style={{height: '50px'}}>\n                                            <img\n                                                alt=\"Placeholder\"\n                                                src={game.box_art_url.replace('{height}', '40').replace('{width}', '40')}\n                                                style={{borderRadius: '50%', marginRight: '20px'}}\n                                            />\n                                            <span>\n                        {game.name}\n                      </span>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                    </Menu>\n                </Sider>\n                <Layout style={{padding: '24px'}}>\n                    <Content\n                        className=\"site-layout-background\"\n                        style={{\n                            padding: 24,\n                            margin: 0,\n                            height: 800,\n                            overflow: 'auto'\n                        }}\n                    >\n                        <Home\n                            resources={this.state.resources}\n                            loggedIn={this.state.loggedIn}\n                            favoriteItems={this.state.favoriteItems}\n                            favoriteOnChange={this.favoriteOnChange}\n                        />\n                    </Content>\n                </Layout>\n            </Layout>\n        </Layout>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}